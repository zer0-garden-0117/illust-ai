UsersMe:
  get:
    operationId: getMyUser
    tags:
      - users
    summary: 認証済のユーザーを取得する
    description: |
      認証済のユーザーを取得する
    security:
      - FirebaseAuth: []
    responses:
      "200":
        $ref: "../components/responses/users.yaml#/UsersResponse"
      "400":
        $ref: "../components/responses/errors.yaml#/BadRequestResponse"
      "401":
        $ref: "../components/responses/errors.yaml#/UnauthorizedResponse"
  patch:
    operationId: patchMyUser
    tags:
      - users
    summary: 認証済のユーザー情報を更新する
    description: |
      認証済のユーザー情報を更新する
    security:
      - FirebaseAuth: []
    requestBody:
      description: |-
        ユーザー情報
      required: true
      content:
        multipart/form-data:
          schema:
            type: object
            properties:
              coverImage:
                type: string
                format: binary
                description: カバー画像
              profileImage:
                type: string
                format: binary
                description: ユーザーアイコン画像
              customUserId:
                type: string
                description: カスタムのuserId
                example: xxxxx
              userProfile:
                type: string
                description: ユーザーのプロフィール
                example: xxxxx
            required:
              - coverImage
              - profileImage
              - customUserId
              - userProfile
            encoding:
              coverImage:
                contentType: image/png, image/jpeg
              profileImage:
                contentType: image/png, image/jpeg
    responses:
      "200":
        $ref: "../components/responses/users.yaml#/UsersResponse"
      "400":
        $ref: "../components/responses/errors.yaml#/BadRequestResponse"
      "401":
        $ref: "../components/responses/errors.yaml#/UnauthorizedResponse"
  delete:
    operationId: deleteMyUser
    tags:
      - users
    summary: 認証済のユーザーを削除する
    description: |
      認証済のユーザーを削除する
    security:
      - FirebaseAuth: []
    responses:
      "200":
        $ref: "../components/responses/users.yaml#/UsersResponse"
      "400":
        $ref: "../components/responses/errors.yaml#/BadRequestResponse"
      "401":
        $ref: "../components/responses/errors.yaml#/UnauthorizedResponse"

PublicUsersById:
  get:
    operationId: getPublicUsers
    tags:
      - users
    summary: 指定したユーザーを取得する
    description: |
      指定したユーザーを取得する
    parameters:
      - $ref: "../components/parameters/pathParams.yaml#/CustomUsersIdPathParam"
    responses:
      "200":
        $ref: "../components/responses/users.yaml#/UsersResponse"
      "400":
        $ref: "../components/responses/errors.yaml#/BadRequestResponse"
      "401":
        $ref: "../components/responses/errors.yaml#/UnauthorizedResponse"

UsersById:
  get:
    operationId: getUsers
    tags:
      - users
    summary: 指定したユーザーを取得する
    description: |
      指定したユーザーを取得する
    security:
      - FirebaseAuth: []
    parameters:
      - $ref: "../components/parameters/pathParams.yaml#/CustomUsersIdPathParam"
    responses:
      "200":
        $ref: "../components/responses/users.yaml#/UsersResponse"
      "400":
        $ref: "../components/responses/errors.yaml#/BadRequestResponse"
      "401":
        $ref: "../components/responses/errors.yaml#/UnauthorizedResponse"

UsersFollow:
  post:
    operationId: followUsers
    tags:
      - users
    summary: 指定したユーザーをフォローする
    description: |
      指定したユーザーをフォローする
    security:
      - FirebaseAuth: []
    parameters:
      - $ref: "../components/parameters/pathParams.yaml#/UsersIdPathParam"
    responses:
      "200":
        $ref: "../components/responses/users.yaml#/UsersResponse"
      "400":
        $ref: "../components/responses/errors.yaml#/BadRequestResponse"
      "401":
        $ref: "../components/responses/errors.yaml#/UnauthorizedResponse"

  delete:
    operationId: unfollowUsers
    tags:
      - users
    summary: 指定したユーザーをアンフォローする
    description: |
      指定したユーザーをアンフォローする
    security:
      - FirebaseAuth: []
    parameters:
      - $ref: "../components/parameters/pathParams.yaml#/UsersIdPathParam"
    responses:
      "200":
        $ref: "../components/responses/users.yaml#/UsersResponse"
      "400":
        $ref: "../components/responses/errors.yaml#/BadRequestResponse"
      "401":
        $ref: "../components/responses/errors.yaml#/UnauthorizedResponse"

UsersActivitySearch:
  post:
    operationId: postUsersActivitySearch
    tags:
      - users
    summary: ユーザーのアクション情報を取得
    description: |
      ユーザーのアクション情報を取得
    security:
      - FirebaseAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "../components/schemas/users.yaml#/ApiUsersActivitySearch"
    responses:
      "200":
        $ref: "../components/responses/users.yaml#/UsersActivitySearchResponse"
      "400":
        $ref: "../components/responses/errors.yaml#/BadRequestResponse"
      "401":
        $ref: "../components/responses/errors.yaml#/UnauthorizedResponse"

UsersLiked:
  get:
    operationId: getUsersLiked
    tags:
      - users
    summary: いいねを取得する
    description: |
      いいねを取得する
    security:
      - FirebaseAuth: []
    parameters:
      - $ref: "../components/parameters/queryParams.yaml#/OffsetQueryParam"
      - $ref: "../components/parameters/queryParams.yaml#/LimitQueryParam"
    responses:
      "200":
        $ref: "../components/responses/users.yaml#/UsersLikedResponse"
      "400":
        $ref: "../components/responses/errors.yaml#/BadRequestResponse"
      "401":
        $ref: "../components/responses/errors.yaml#/UnauthorizedResponse"

UsersLikedByWorkId:
  post:
    operationId: postUsersLikedByWorkdId
    tags:
      - users
    summary: 指定した作品にいいねを付与する
    description: |
      指定した作品にいいねを付与する
    security:
      - FirebaseAuth: []
    parameters:
      - $ref: "../components/parameters/pathParams.yaml#/WorksIdPathParam"
    responses:
      "200":
        $ref: "../components/responses/users.yaml#/UsersLikedByWorkIdResponse"
      "400":
        $ref: "../components/responses/errors.yaml#/BadRequestResponse"
      "401":
        $ref: "../components/responses/errors.yaml#/UnauthorizedResponse"

  delete:
    operationId: deleteUsersLikedByWorkdId
    tags:
      - users
    summary: 指定した作品のいいねを削除する
    description: |
      指定した作品のいいねを削除する
    security:
      - FirebaseAuth: []
    parameters:
      - $ref: "../components/parameters/pathParams.yaml#/WorksIdPathParam"
    responses:
      "200":
        $ref: "../components/responses/users.yaml#/UsersLikedByWorkIdResponse"
      "400":
        $ref: "../components/responses/errors.yaml#/BadRequestResponse"
      "401":
        $ref: "../components/responses/errors.yaml#/UnauthorizedResponse"

UsersViewed:
  get:
    operationId: getUsersViewed
    tags:
      - users
    summary: 閲覧済を取得する
    description: |
      いいねを取得する
    security:
      - FirebaseAuth: []
    parameters:
      - $ref: "../components/parameters/queryParams.yaml#/OffsetQueryParam"
      - $ref: "../components/parameters/queryParams.yaml#/LimitQueryParam"
    responses:
      "200":
        $ref: "../components/responses/users.yaml#/UsersViewedResponse"
      "400":
        $ref: "../components/responses/errors.yaml#/BadRequestResponse"
      "401":
        $ref: "../components/responses/errors.yaml#/UnauthorizedResponse"

UsersViewedByWorkId:
  post:
    operationId: postUsersViewedByWorkdId
    tags:
      - users
    summary: 指定した作品に閲覧済を付与する
    description: |
      指定した作品に閲覧済を付与する
    security:
      - FirebaseAuth: []
    parameters:
      - $ref: "../components/parameters/pathParams.yaml#/WorksIdPathParam"
    responses:
      "200":
        $ref: "../components/responses/users.yaml#/UsersViewedByWorkIdResponse"
      "400":
        $ref: "../components/responses/errors.yaml#/BadRequestResponse"
      "401":
        $ref: "../components/responses/errors.yaml#/UnauthorizedResponse"

  delete:
    operationId: deleteUsersViewedByWorkdId
    tags:
      - users
    summary: 指定した作品の閲覧済を削除する
    description: |
      指定した作品の閲覧済を付削除する
    security:
      - FirebaseAuth: []
    parameters:
      - $ref: "../components/parameters/pathParams.yaml#/WorksIdPathParam"
    responses:
      "200":
        $ref: "../components/responses/users.yaml#/UsersViewedByWorkIdResponse"
      "400":
        $ref: "../components/responses/errors.yaml#/BadRequestResponse"
      "401":
        $ref: "../components/responses/errors.yaml#/UnauthorizedResponse"
